stages:
  - build
  - test
  - publish
  - tag

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOTNET_NOLOGO: "true"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
  VERSION_TYPE:
    value: "PATCH"
    description: "Type de version : MAJOR, MINOR ou PATCH"
    options:
      - "MAJOR"
      - "MINOR"
      - "PATCH"
  GITLAB_ACCESS_TOKEN:
    description: "Token d'accÃ¨s personnel pour pousser les tags dans GitLab"
    value: "glpat-4mDDrkEMVZsyze5ztBop"

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet restore
    - dotnet build --configuration Release --no-restore
  artifacts:
    paths:
      - bin/
    expire_in: 1 week

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet test --no-build --configuration Release
  dependencies:
    - build

publish:
  stage: publish
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet publish -c Release -o out --runtime win-x64 --self-contained /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
  artifacts:
    paths:
      - out/
    expire_in: 1 week

tag:
  stage: tag
  image: debian:latest
  before_script:
    - apt-get update && apt-get install -y git
  script: >-
    LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "0.0.0");
    echo "Dernier tag : $LAST_TAG";
    IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_TAG";
    if [ "$VERSION_TYPE" = "MAJOR" ]; then
      MAJOR=$((MAJOR + 1));
      MINOR=0;
      PATCH=0;
    elif [ "$VERSION_TYPE" = "MINOR" ]; then
      MINOR=$((MINOR + 1));
      PATCH=0;
    elif [ "$VERSION_TYPE" = "PATCH" ]; then
      PATCH=$((PATCH + 1));
    fi;
    NEW_TAG="$MAJOR.$MINOR.$PATCH";
    echo "Nouveau tag : $NEW_TAG";
    git config user.name "GitLab CI";
    git config user.email "ci@easysave.com";
    git tag -a "$NEW_TAG" -m "Version $NEW_TAG";
    git push https://oauth2:$GITLAB_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git --tags;
  dependencies:
    - publish
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "schedule"'
